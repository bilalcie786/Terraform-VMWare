version: "3.2"
services:
  database:
    image: postgres:10.2
    environment:
      - DNS_SERVER
      - POSTGRES_DB
      - POSTGRES_HOST_PORT
      - POSTGRES_USER
      - POSTGRES_PASSWORD_FILE=/run/secrets/GITLAB_POSTGRES_PASSWORD_SECRET
      - GITLAB_DATABASE_HOST_VOLUME
    dns: "${DNS_SERVER}"
    deploy:
      labels:
        io.salte.vendor: "PostgreSQL"
        io.salte.platform: "PostgreSQL"
        io.salte.platformDescription: "PostgreSQL is a powerful, open source object-relational database system."
        io.salte.serviceDescription: "PostgreSQL database used by Gitlab."
        io.salte.costCenter: "000000"
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "${POSTGRES_HOST_PORT}:5432"
    volumes:
      - type: bind
        source: "${GITLAB_DATABASE_HOST_VOLUME}"
        target: /var/lib/postgresql/data
    secrets:
      - GITLAB_POSTGRES_PASSWORD_SECRET
  web:
    image: gitlab/gitlab-ce:latest
    depends_on:
      - database
    environment:
      EXTERNAL_URL:
      SSL_CERTIFICATE:
      SSL_CERTIFICATE_KEY:
      POSTGRES_HOST:
      POSTGRES_HOST_PORT:
      POSTGRES_DB:
      POSTGRES_USER:
      POSTGRES_PASSWORD:
      INITIAL_ROOT_PASSWORD:
      DNS_SERVER:
      HTTPS_PORT:
      HTTP_PORT:
      SSH_PORT:
      GITLAB_CONFIG_HOST_VOLUME:
      GITLAB_LOGS_HOST_VOLUME:
      GITLAB_DATA_HOST_VOLUME:
      CERTIFICATE_HOST_VOLUME:
      GITLAB_OMNIBUS_CONFIG: |
        external_url "${EXTERNAL_URL}"
        nginx['redirect_http_to_https'] = false
        nginx['ssl_certificate'] = "${SSL_CERTIFICATE}"
        nginx['ssl_certificate_key'] = "${SSL_CERTIFICATE_KEY}"
        gitlab_rails['lfs_enabled'] = true
        gitlab_rails['db_adapter'] = 'postgresql'
        gitlab_rails['db_encoding'] = 'utf8'
        gitlab_rails['db_host'] = "${POSTGRES_HOST}"
        gitlab_rails['db_port'] = "${POSTGRES_HOST_PORT}"
        gitlab_rails['db_database'] = "${POSTGRES_DB}"
        gitlab_rails['db_username'] = "${POSTGRES_USER}"
        gitlab_rails['db_password'] = "${POSTGRES_PASSWORD}"
        gitlab_rails['initial_root_password'] = "${INITIAL_ROOT_PASSWORD}"
        gitlab_rails['smtp_enable'] = true
        gitlab_rails['smtp_address'] = "${SMTP_ADDRESS}"
        gitlab_rails['smtp_port'] = "${SMTP_PORT}"
        gitlab_rails['smtp_user_name'] = "${SMTP_USER_NAME}"
        gitlab_rails['smtp_password'] = "${SMTP_PASSWORD}"
        gitlab_rails['smtp_domain'] = "${SMTP_DOMAIN}"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['smtp_openssl_verify_mode'] = 'peer'
    dns: "${DNS_SERVER}"
    deploy:
      labels:
        io.salte.vendor: "Gitlab"
        io.salte.platform: "Gitlab"
        io.salte.platformDescription: "Gitlab Community Edition"
        io.salte.serviceDescription: "Web Server and Redis Server used by Gitlab"
        io.salte.costCenter: "000000"
      replicas: 1
      restart_policy:
        condition: any
    ports:
      - "${HTTP_PORT}:80"
      - "${HTTPS_PORT}:443"
      - "${SSH_PORT}:22"
    volumes:
      - type: bind
        source: "${GITLAB_CONFIG_HOST_VOLUME}"
        target: /etc/gitlab
      - type: bind
        source: "${GITLAB_LOGS_HOST_VOLUME}"
        target: /var/log/gitlab
      - type: bind
        source: "${GITLAB_DATA_HOST_VOLUME}"
        target: /var/opt/gitlab
      - type: bind
        source: "${CERTIFICATE_HOST_VOLUME}"
        target: /usr/local/share
secrets:
  GITLAB_POSTGRES_PASSWORD_SECRET:
    external: true
